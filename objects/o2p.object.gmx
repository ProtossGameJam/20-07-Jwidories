<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s2pPlate</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>3</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>halfWidth := sprite_get_width(sprite_index)/2;
rotation := 0;

charScale := 1/12;
walkAnim := 0;

_maxSpeed := 0.2;
_damping := 15/16;
_damping_out_of_bound := 3/4;
_angular_damping := 7/8;
_tilt_angle := 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var
   in := keyboard_check(vk_right) - keyboard_check(vk_left),
   leftEnd := phy_position_x &lt; halfWidth &amp;&amp; phy_speed_x &lt;= 0,
   rightEnd := phy_position_x &gt; room_width - halfWidth &amp;&amp; phy_speed_x &gt;= 0,
   dir := 0;
if(CLEAR_ON_EXIT &amp;&amp; oJwidoriSystem.allBooksCollected) {
   leftEnd = false;
   rightEnd = false;
}

if(oJwidoriSystem.elapsedTime &lt; 0)
   in = 0;

if(in == 1 &amp;&amp; !rightEnd)
   dir = 1;
else if(in == -1 &amp;&amp; !leftEnd)
   dir = -1;
phy_speed_x += _maxSpeed*dir;

if(leftEnd || rightEnd)
   phy_speed_x *= _damping_out_of_bound;
else
   phy_speed_x *= _damping;

if(abs(phy_speed_x) &lt; 1/30) {
   var to := 4*round(walkAnim/4);
   walkAnim = clamp(to, walkAnim - 1/30, walkAnim + 1/30);
} else
   walkAnim += phy_speed_x/8;
walkAnim = (walkAnim%4 + 4)%4;
image_single = round(walkAnim)%4;

phy_rotation += (_tilt_angle*dir - phy_rotation)*(1 - _angular_damping);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(
   s2p, image_index,
   phy_position_x, phy_position_y,
   charScale, charScale, -2*phy_rotation,
   $ffffff, 1
);
draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.119999997317791</PhysicsObjectRestitution>
  <PhysicsObjectGroup>1</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.5</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.5</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>-1</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>160,0</point>
    <point>160,16</point>
    <point>0,16</point>
  </PhysicsShapePoints>
</object>
