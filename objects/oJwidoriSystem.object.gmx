<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>numBooks := instance_number(oBookItem);
allBooksCollected := false;
elapsedTime := -90;
stability := 0;

paused := false;
cleared := false;
pauseBackground := -1;

_obstacle_avg_interval := 500;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var
   retry := keyboard_check_pressed(ord("R")),
   pause := keyboard_check_pressed(vk_escape) || keyboard_check_pressed(ord("P")),
   next := keyboard_check_pressed(vk_enter);

if(cleared) {
   if(retry)
      instance_create(room, 0, oTransition);
   if(next)
      instance_create(room + 1, 0, oTransition);
} else {
   if(pause &amp;&amp; elapsedTime &gt;= 0 &amp;&amp; !instance_exists(oTransition))
      event_user(0);
   
   if(paused) {
      if(retry &amp;&amp; !instance_exists(oTransition)) {
         audio_sound_gain(sBGM, 1, 0);
         instance_create(room, 0, oTransition);
      }
   } else {
      elapsedTime++;
      allBooksCollected = instance_number(oBook) == numBooks;
      if(allBooksCollected) {
         var finished := false;
         if(CLEAR_ON_EXIT) {
            if(o2p.x - 2*o2p.halfWidth &gt; room_width || o2p.x + 2*o2p.halfWidth &lt;= 0)
               finished = true;
         } else if(++stability == _stability_check_time)
            finished = true;
         if(finished) {
            var prev := oRecords.record[room - 1];
            if(prev == -1 || elapsedTime &lt; prev)
               with(oRecords) {
                  record[room - 1] = other.elapsedTime;
                  event_user(0);
               }
            
            cleared = true;
         }
      } else {
         stability = 0;
         if(random(1) &lt; 1/_obstacle_avg_interval)
            instance_create(0, 0, o2pWarning);
      }
   }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///event_user(0): toggle pause

paused = !paused;
if(paused) {
   with(o2p)
      phy_active = false;
   with(oBook)
      phy_active = false;
   var surface := surface_create(room_width, room_height);
   surface_copy(surface, 0, 0, application_surface);
   pauseBackground = background_create_from_surface(
      surface,
      0, 0, room_width, room_height,
      false, false
   );
   surface_free(surface);
   
   instance_deactivate_all(true);
   instance_activate_object(oRecords);
   audio_sound_gain(sBGM, 0.4, 0);
} else {
   background_delete(pauseBackground);
   pauseBackground = -1;
   instance_activate_all();
   with(o2p)
      phy_active = true;
   with(oBook)
      phy_active = true;
   audio_sound_gain(sBGM, 1, 0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var
   timeStr := string_format(
      floor(max(elapsedTime, 0)/room_speed*10)/10,
      0, 1
   ),
   books := instance_number(oBook),
   stars := 1
      + (elapsedTime &lt;= 60*oRecords.perfect[room - 1])
      + (elapsedTime &lt;= 60*oRecords.good[room - 1]),
   scale := 24/166,
   width;

draw_set_font(fLarge);
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
if(cleared) {
   draw_set_colour($ffffff); // cover
   draw_set_alpha(0.75);
   draw_rectangle(0, 0, room_width - 1, room_height - 1, false);
   
   draw_set_colour($000000);
   draw_set_alpha(1);
   draw_text(room_width/2, room_height/2 - 64, 'Stage Clear!');
   
   draw_set_font(fMain);
   
   for(var i := 0; i &lt; 3; i++)
      draw_sprite(sStar, i + 1 &lt;= stars, room_width/2 + 24*(i - 1), room_height/2 - 14);
   
   width = string_width(timeStr);
   draw_sprite_ext(sTime, 0, room_width/2 - width/2 - 2, room_height/2 + 12, scale, scale, 0, $ffffff, 1);
   draw_text(room_width/2 + 14, room_height/2 + 14, timeStr);
   
   draw_text(room_width/2, room_height/2 + 56, '[R] Retry    [Enter] Next Stage');
} else if(paused) {
   draw_set_colour($ffffff); // surface &amp; cover
   draw_background(pauseBackground, 0, 0);
   draw_set_alpha(0.75);
   draw_rectangle(0, 0, room_width - 1, room_height - 1, false);
   
   draw_set_colour($000000);
   draw_set_alpha(1);
   draw_text(room_width/2, room_height/2 - 64, 'P A U S E D');
   
   draw_set_font(fMain);
   for(var i := 0; i &lt; 3; i++)
      draw_sprite(sStar, i + 1 &lt;= stars, room_width/2 + 24*(i - 1), room_height/2 - 28);
   
   width = string_width(timeStr);
   draw_sprite_ext(sTime, 0, room_width/2 - width/2 - 2, room_height/2, scale, scale, 0, $ffffff, 1);
   draw_text(room_width/2 + 14, room_height/2, timeStr);
   
   width = string_width(string(books) + '/' + string(numBooks));
   draw_sprite_ext(sBooks, 0, room_width/2 - width/2 - 2, room_height/2 + 28, scale, scale, 0, $ffffff, 1);
   draw_text(room_width/2 + 14, room_height/2 + 28, string(books) + '/' + string(numBooks));
   
   draw_text(room_width/2, room_height/2 + 56, '[R] Retry    [F12] Reset Game');
} else {
   draw_set_colour($000000);
   draw_set_alpha(1);
   
   if(elapsedTime &lt; 0) {
      draw_set_font(fMain);
      draw_text(room_width/2, room_height/2, 'Ready?');
   } else if(elapsedTime &lt; 30) {
      draw_set_alpha(1 - sqr(elapsedTime/30));
      draw_text(room_width/2, room_height/2, 'Go!');
   }
   
   draw_set_alpha(1);
   draw_set_font(fLarge);
   
   width = string_width(timeStr);
   draw_sprite_ext(sTime, 0, room_width/2 - width/2 - 2, 22, scale*3/2, scale*3/2, 0, $ffffff, 1);
   draw_text(room_width/2 + 20, 22, timeStr);
   
   draw_set_font(fMain);
   draw_set_halign(fa_left);
   
   draw_sprite_ext(sBooks, 0, 16, 16, scale, scale, 0, $ffffff, 1);
   draw_text(32, 16, string(books) + '/' + string(numBooks));
   
   draw_set_halign(fa_right);
   draw_text(room_width - 8, 16, 'Stage ' + string(room - rMenu));
   
   if(books == numBooks) {
      draw_text(room_width - 8, room_height*3/4, '| ! GO ! &gt;');
      draw_set_halign(fa_left);
      draw_text(8, room_height*3/4, '&lt; ! GO ! |');
   }
}

if(SHOW_FPS) {
   draw_set_halign(fa_left);
   draw_set_valign(fa_bottom);
   draw_text(8, room_height - 8, fps);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
